name: Build and Deploy R Project

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

permissions: write-all

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up R for Validation
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: 'release'

      - name: Detect and Install Required R Dependencies
        run: |
          # Install automagic package
          Rscript -e "install.packages('automagic', repos='http://cran.us.r-project.org')"
          
          # Use automagic to detect dependencies in all R scripts
          echo "Detecting required packages..."
          REQUIRED_PACKAGES=$(Rscript -e "library(automagic); \
                               scripts <- list.files('src', pattern = '\\\\.r$', full.names = TRUE); \
                               deps <- unique(unlist(lapply(scripts, function(x) automagic::get_dependent_packages(x)))); \
                               cat(paste(deps, collapse=' '))")
          
          echo "Found required packages: $REQUIRED_PACKAGES"
          
          # Install detected packages
          if [ ! -z "$REQUIRED_PACKAGES" ]; then
            Rscript -e "install.packages(c($REQUIRED_PACKAGES), repos='http://cran.us.r-project.org')"
          fi
          
          # Install additional packages that might be needed but not detected
          Rscript -e "install.packages('data.table', repos='http://cran.us.r-project.org')"
          Rscript -e "install.packages(c('ggthemes', 'scales', 'viridis', 'RColorBrewer'), repos='http://cran.us.r-project.org')"

      - name: Validate R Scripts
        run: |
          for script in src/*.r; do
            echo "Checking syntax for $script"
            # Parse the R script to check for syntax errors without executing
            Rscript -e "tryCatch(parse('$script'), error = function(e) {cat('Syntax error in $script:\n'); cat(e$message, '\n'); quit(status = 1)})"
          done
          echo "All R scripts passed syntax validation"

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,prefix=,format=short

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max